apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-dags-pvc
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-logs-pvc
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow
  labels:
    app: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: airflow
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["airflow-scheduler"]
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: wait-for-postgres
        image: postgres:15
        command: ['sh', '-c', 'until pg_isready -h postgres -p 5432 -U airflow; do echo waiting for postgres; sleep 2; done;']
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: airflow-secrets
              key: airflow_password
      - name: airflow-init
        image: apache/airflow:2.10.2-python3.9
        command: ['bash', '-c']
        args:
        - |
          airflow db init
          airflow users create \
            --username admin \
            --password admin \
            --firstname Admin \
            --lastname User \
            --role Admin \
            --email admin@example.com
        env:
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
        - name: AIRFLOW__CORE__EXECUTOR
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__CORE__EXECUTOR
        - name: AIRFLOW__API__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow-secrets
              key: secret_key
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
        - name: airflow-logs
          mountPath: /opt/airflow/logs
      containers:
      - name: airflow-webserver
        image: apache/airflow:2.10.2-python3.9
        command: ['airflow', 'webserver']
        ports:
        - containerPort: 8080
        env:
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
        - name: AIRFLOW__CORE__EXECUTOR
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__CORE__EXECUTOR
        - name: AIRFLOW__API__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow-secrets
              key: secret_key
        - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
        - name: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__KUBERNETES_EXECUTOR__NAMESPACE
        - name: AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_REPOSITORY
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_REPOSITORY
        - name: AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_TAG
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__KUBERNETES_EXECUTOR__WORKER_CONTAINER_TAG
        - name: AIRFLOW__KUBERNETES_EXECUTOR__DELETE_WORKER_PODS
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__KUBERNETES_EXECUTOR__DELETE_WORKER_PODS
        
        - name: AIRFLOW__LOGGING__LOGGING_LEVEL
          valueFrom:
            configMapKeyRef:
              name: airflow-config
              key: AIRFLOW__LOGGING__LOGGING_LEVEL
              
        volumeMounts:
        - name: airflow-dags
          mountPath: /opt/airflow/dags
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: airflow-dags
        persistentVolumeClaim:
          claimName: airflow-dags-pvc
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow
  labels:
    app: airflow-webserver
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: airflow-webserver
